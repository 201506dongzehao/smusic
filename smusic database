1引言	2
1.1编写目的	2
1.2背景	2
1.3定义	2
1.4参考资料	2
2外部设计	2
2.1标识符和状态	2
2.2使用它的程序	3
2.3约定	3
2.4专门指导	3
2.5支持软件	3
3结构设计	3
3.1概念结构设计	3
3.2逻辑结构设计	3
3.3物理结构设计	4
4运用设计	4
4.1数据字典设计	4
4.2安全保密设计	4
 
数据库设计说明书（GB8567——88）
1引言
1.1编写目的
SMusic音乐分享平台的数据库是为了以后编码、测试以及维护阶段的后台数据存储做准备。应用于系统开发前期，为后期数据库设计指引方向。
预期读者：系统开发人员、系统测试人员和维护人员
1.2背景
    项目名称：SMusic音乐分享平台
数据库名称：smusic
数据库系统：sql server 2008
任务提出者：董泽浩
用户：登陆SMusic网站在线网络用户

1.3定义
数据库：用来后保存后台数据库的后台应用软件
	表：不同字段汇成的集合
	字段：表中各个记录的名字
1.4参考资料
1.	数据要求说明书
2外部设计
2.1标识符和状态

表名	标示符	描述信息	状态
Singer	Singerid	用来保存歌手信息	暂时使用
Album	Albumid	用来保存歌手所拥有的专辑信息	暂时使用
Song	Albumid、categoryid	用来保存某一首歌曲的详细信息	暂时使用
Category	Categoryid	用来保存歌曲分类信息	暂时使用
User	Userid	用来保存用户信息	暂时使用
Comment	Commentid	用来保存用户对某一首歌的评论	暂时使用
Love	Loveid	用来保存用户喜欢的歌曲	暂时使用
Manager	Managerid	用来保存SMusic后台管理员的详细信息	暂时使用

2.2使用它的程序
列出将要使用或访问此数据库的所有应用程序，对于这些应用程序的每一个，给出它的名称和版本号。
应用程序	所需数据库	版本号
用户注册、登陆	User	1.0
查看用户资料	User	1.0
搜索歌曲		Song	1.0
分类查看更多	Song	1.0
点击某一分类 	Song	1.0
查看歌曲信息	Song、album	1.0
查看专辑信息	Album、singer	1.0
查看歌手信息	Singer	1.0
查看歌曲评论	User、comment、song	1.0
用户评论歌曲	User、comment、song	1.0
查看收藏的歌曲	User、song	1.0
后台管理员登陆	Manager	1.0
查看、添加、删除和修改分类	Category	1.0
查看、添加、查看和修改歌手信息	Singer	1.0
查看、添加、查看和修改歌曲	Song	1.0
查看、添加、查看和修改评论	Comment	1.0
查看、添加、查看和修改用户	User	1.0

2.3约定
陈述一个程序员或一个系统分析员为了能使用此数据库而需要了解的建立标号、标识的约定，例如用于标识数据库的不同版本的约定和用于标识库内各个文卷、、记录、数据项的命名约定等。
数据库名：smusic
数据库包含表：
Singer
Album
Song
Category
User
Comment
Love
Manager
表中字段：
Singer表包含字段：歌手号、歌手名、出生日期、出生地、照片、代表作、详细介绍

Album表包含字段：专辑号、专辑名、专辑详细信息、歌手号
Song表包含字段：歌曲号、歌曲名、歌词、歌曲总时长、歌曲链接、点赞数、专辑号、分类号
Category表包含字段：类别号、类别名
User表包含字段：用户号、用户名、密码、手机号、邮箱、验证问题、验证答案
Comment表包含字段：评论号、评论内容、点赞数、用户号、歌曲号
Love表包含字段：用户号、歌曲号
Manager表包含字段：管理号、管理名、账号、密码

2.4专门指导
向准备从事此数据库的生成、从事此数据库的测试、维护人员提供专门的指导，例如将被送入数据库的数据的格式和标准、送入数据库的操作规程和步骤，用于产生、修改、更新或使用这些数据文卷的操作指导。如果这些指导的内容篇幅很长，列出可参阅的文件资料的名称和章条。

详见数据要求说明书。
2.5支持软件
简单介绍同此数据库直接有关的支持软件，如数据库管理系统、存储定位程序和用于装入、生成、修 改、更新数据库的程序等。说明这些软件的名称、版本号和主要功能特性，如所用数据模型的类型、允许 的数据容量等。列出这些支持软件的技术文件的标题、编号及来源。
3结构设计
3.1概念结构设计
说明本数据库将反映的现实世界中的实体、属性和它们之间的关系等的原始数据形式，包括各数据项、记录、系、文卷的标识符、定义、类型、度量单位和值域，建立本数据库的每一幅用户视图。
 
3.2逻辑结构设计
说明把上述原始数据进行分解、合并后重新组织起来的数据库全局逻辑结构，包括所确定的关键字和属性、重新确定的记录结构和文卷结构、所建立的各个文卷之间的相互关系，形成本数据库的数据库管理员视图。
1.	基本数据设定（用户、专辑、歌手、歌曲、评论）
2.	歌手信息：歌手号、歌手名、出生日期、出生地、照片、代表作、详细介绍
3.	专辑信息：专辑号、专辑名、专辑详细信息、歌手号
4.	歌曲信息：歌曲号、歌曲名、歌词、歌曲总时长、歌曲链接、点赞数、专辑号、分类号
5.	歌曲分类：类别号、类别名
6.	用户信息：用户号、用户名、密码、手机号、邮箱、验证问题、验证答案
7.	评论信息：评论号、评论内容、点赞数、用户号、歌曲号
8.	用户喜欢的歌曲：用户号、歌曲号
9.	后台管理员：管理号、管理名、账号、密码

3.3物理结构设计
建立系统程序员视图，包括：
a．	数据在内存中的安排，包括对索引区、缓冲区的设计；
b．	所使用的外存设备及外存空间的组织，包括索引区、数据块的组织与划分；
c．	访问数据的方式方法。
4运用设计
4.1数据字典设计
对数据库设计中涉及到的各种项目，如数据项、记录、系、文卷、模式、子模式等一般要建立起数据字典，以说明它们的标识符、同义名及有关信息。在本节中要说明对此数据字典设计的基本考虑。
1.	数据项： 不可在分割的数据单位
        数据项条目
数据项名称：歌手号
别名：siid
类型长度：int（20）
描述：歌手的编号
   
        数据项条目
数据项名称：歌手名
别名：siname
类型长度：char（20）
描述：歌手的名字

        数据项条目
数据项名称：出生日期
别名：brithday
类型长度：char（20）
描述：歌手出生信息

        数据项条目
数据项名称：出生地
别名：brith
类型长度：char（20）
描述：歌手的出生地

        数据项条目
数据项名称：照片
别名：photo
类型长度：varchar（255）
描述：歌手的照片

        数据项条目
数据项名称：代表作
别名：opus
类型长度：varchar（255）
描述：歌手的作品

        数据项条目
数据项名称：详细介绍
别名：introduce
类型长度：varchar（255）
描述：歌手的详细介绍

        数据项条目
数据项名称：专辑号
别名：aid
类型长度：int（20）
描述：专辑编号

        数据项条目
数据项名称：专辑名
别名：aname
类型长度：char（20）
描述：专辑名称

        数据项条目
数据项名称：专辑详细信息
别名：aintroduce
类型长度：varchar（255）
描述：专辑的详细介绍

        数据项条目
数据项名称：歌曲号
别名：soid
类型长度：char（20）
描述：歌曲编号

        数据项条目
数据项名称：歌词
别名：lyric
类型长度：varchar（255）
描述：歌曲详细歌词

        数据项条目
数据项名称：歌曲总时长
别名：totaltime
类型长度：char（20）
描述：歌曲时间

        数据项条目
数据项名称：歌曲链接
别名：link
类型长度：varchar（255）
描述：歌曲地址

        数据项条目
数据项名称：点赞数
别名：alove
类型长度：int（20）
描述：歌曲点赞（添加到我喜欢）次数   自增

        数据项条目
数据项名称：类别号
别名：caid
类型长度：int（20）
描述：分类编号

        数据项条目
数据项名称：类别名
别名：caname
类型长度：rchar（20）
描述：分类名称

        数据项条目
数据项名称：用户号
别名：uid
类型长度：int（255）
描述：用户编号

        数据项条目
数据项名称：用户名
别名：uname
类型长度：char（20）
描述：登陆网站用户名 

        数据项条目
数据项名称：密码
别名：upassword
类型长度：varchar（255）
描述：用户登陆网站密码（md5加密）

        数据项条目
数据项名称：手机号
别名：phonenum
类型长度：int（11）
描述：用户用于注册的手机号

        数据项条目
数据项名称：邮箱
别名：email
类型长度：varchar（255）
描述：用户用于注册的邮箱

        数据项条目
数据项名称：验证问题
别名：questions
类型长度：varchar（255）
描述：用户用于重设密码多设置问题

        数据项条目
数据项名称：验证答案
别名：answer
类型长度：varchar（255）
描述：用户重设密码所设置问题答案

        数据项条目
数据项名称：评论号
别名：coid
类型长度：int（255）
描述：用户评论编号

        数据项条目
数据项名称：评论内容
别名：comment
类型长度：varchar（255）
描述：用户对某一歌曲评论内容

        数据项条目
数据项名称：管理号
别名：mid
类型长度：int（20）
描述：smusic后台管理员编号

        数据项条目
数据项名称：管理名
别名：mname
类型长度：char（20）
描述：smusic后台管理员用户名

        数据项条目
数据项名称：管理员账号
别名：musername
类型长度：char（20）
描述：smusic后台管理员登陆后台账号

        数据项条目
数据项名称：管理员密码
别名：mpassword
类型长度：varchar（255）
描述：smusic后台管理员登陆后台密码（md5加密）


2.	数据结构：反应数据之间的组合关系
                        数据结构条目
数据结构名称：歌手信息
定义说明：定义了有关歌手的相关信息
数据项：歌手号、歌手名、出生日期、出生地、照片、代表作、详细介绍

                        数据结构条目
数据结构名称：专辑信息
定义说明：定义了有关歌手发布的专辑的相关信息
数据项：专辑号、专辑名、专辑信息、歌手号

                        数据结构条目
数据结构名称：歌曲信息
定义说明：定义了有关歌手发布的歌曲相关信息
数据项：歌曲号、歌曲名、歌词、歌曲总时长、歌曲链接、点赞数、专辑号、分类号

                        数据结构条目
数据结构名称：分类信息
定义说明：定义了smusic所有音乐分类信息
数据项：类别号、类别名

                        数据结构条目
数据结构名称：用户信息
定义说明：定义登陆smusic网站用户的详细信息
数据项：用户号、用户名、密码、手机号、邮箱、验证问题、验证答案

                        数据结构条目
数据结构名称：用户评论
定义说明：定义了用户对某一首歌曲的评论
数据项：用户号、歌曲号、评论号、评论内容、点赞数

                        数据结构条目
数据结构名称：用户收藏歌曲
定义说明：用户喜欢的歌曲
数据项：用户号、歌曲号

                        数据结构条目
数据结构名称：管理员信息
定义说明：smusic后台管理员的详细信息
数据项：管理号、用户名、账号、密码

3.	数据存储：是数据结构停留或者保存的地方，也是数据流的来源和去向之一
                           数据存储条目
数据存储名称：用户评论
描述：用户对某一歌曲评论是产生
生成：评论号、歌曲号


4.2安全保密设计
说明在数据库的设计中，将如何通过区分不同的访问者、不同的访问类型和不同的数据对象，进行分别对待而获得的数据库安全保密的设计考虑。
表信息	权限
用户信息	管理员
用户评论	管理员
歌手信息	管理员
歌曲信息	管理员
分类信息	管理员

